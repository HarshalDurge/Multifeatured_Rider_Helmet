
#include <SoftwareSerial.h>
 
#include <TinyGPS++.h>

#define Sober 200;   // Define max value that we consider sober

#define Drunk 400   // Define min value that we consider drunk

#define MQ3 0

int mq3 = 6;
 
float lattitude, llongitude;
 
float a[2];
 
float *p;

float sensorValue;  //variable to store sensor value


 
SoftwareSerial gpsSerial(2, 3);
 
SoftwareSerial gsmSerial(10, 11);
 
TinyGPSPlus gps;
 
void setup()
 
{
  
  pinMode(5, OUTPUT);         //vibrator
 
  pinMode(A4, INPUT_PULLUP);   //
 
  Serial.begin(9600);
 
  pinMode(mq3, INPUT_PULLUP);
 
  Serial.begin(9600);
 
  delay(1000);
 
  gpsSerial.begin(9600);
 
  delay(1000);
 
  gsmSerial.begin(9600);
 
  delay(1000);
 
  Serial.print("—Tracking–");
 
  Serial.print("**Location**");
 
  gsmSerial.println("AT+CNMI=2,2,0,0,0");
 
  delay(3000);
 
  Serial.print("Initializing……");
 
  delay(2000);
 
  Serial.print("System Ready  ");
 
  delay(1000);

  
}
 
void loop()
 
{
  float sensorValue = analogRead(MQ3); // read analog input pin 0

  Serial.print("Sensor Value: ");

  Serial.print(sensorValue);
 
  if (sensorValue >= Sober && sensorValue < Drunk){            //MQ3 sensor condition
 
    digitalWrite(5, HIGH);
 
    delay(1000);
 
    digitalWrite(5, LOW);
    
    delay(1000);
    
    digitalWrite(5, HIGH);    //Vibrator on/off
 
    delay(1000);
 
    digitalWrite(5, LOW);
    
    delay(1000);
    
    digitalWrite(5, HIGH);
 
    delay(1000);
 
    digitalWrite(5, LOW);
 
  }
 
  else if (sensorValue > 700) {            //MQ3 condition
 
    digitalWrite(5, HIGH);
    
    SendMessage();               //Alert message
    
  }
 
  else
 
    {
      digitalWrite(5, LOW);
    }
    
   unsigned int outputValue = map(sensorValue, 0, 1023, 0, 255);
   
  if (gsmSerial.available() > 0)
 
    Serial.write(gsmSerial.read());
 
  while (gsmSerial.available())
 
  {
 
    gsmSerial.read();
  }
 
  while (Serial.available())
 
  {
 
    Serial.read();
  }
 
  get_gsm();
}
 
float *get_gps()
 
{
 
  gpsSerial.listen();
 
  Serial.println("INSIDE get_gps");
 
  while (1)
 
  {
 
    while (gpsSerial.available() > 0)
 
    {
      gps.encode(gpsSerial.read());
    }
 
    if (gps.location.isUpdated())
 
    {
      
      Serial.print("LAT=");
      Serial.println(gps.location.lat(), 6);
 
      Serial.print("LONG=");
      Serial.println(gps.location.lng(), 6);
 
      lattitude = gps.location.lat();
 
      longitude = gps.location.lng();
 
      break;
    }
  }
 
  a[0] = lattitude;
 
  a[1] = longitude;
 
  return a;
}
 
void get_gsm()
 
{
 
  gsmSerial.listen();
 
  while (gsmSerial.available() > 0)
 
  {
    Serial.println("INSIDE gsmSerial.available");
 
    if (gsmSerial.find("Track"))
 
    {
      Serial.println("INSIDE track");
 
      gsmSerial.println("AT+CMGF=1");  
 
      delay(1000);  
 
      gsmSerial.println("AT+CMGS=\"+91xxxxxxxxxx\"\r");  
 
      delay(1000);
 
      p = get_gps();
 
      gsmSerial.listen();
 
      Serial.print("Your Car Location: ");
 
      gsmSerial.print("Your Car Location: ");
 
      Serial.print("LATTITUDE=");
      Serial.print(*p, 6);
 
      gsmSerial.print("LATTITUDE=");
      gsmSerial.print(*p, 6);
      gsmSerial.print(",");  // The SMS text you want to send
 
      Serial.print("LONGITUDE=");
      Serial.print(*(p + 1), 6);
 
      gsmSerial.print("LONGITUDE=");
      gsmSerial.print(*(p + 1), 6);  // The SMS text you want to send
 
      delay(100);
 
      gsmSerial.println((char)26);  // ASCII code of CTRL+Z for saying the end of sms to  the module
 
      delay(1000);
    }
  }
}
 
void SendMessage()
 
{
 
  gsmSerial.println("AT+CMGF=1");  //Sets the GSM Module in Text Mode
 
  delay(1000);  // Delay of 1000 milli seconds or 1 second
 
  gsmSerial.println("AT+CMGS=\"+91xxxxxxxxxx\"\r");  // Replace x with mobile number
 
  delay(1000);
 
  gsmSerial.println("Drunk & Drive case detected");  // The SMS text you want to send

  gsmSerial.print("http://maps.google.com/maps?q=loc:");
 
  delay(1000);
 
  p = get_gps();
 
  gsmSerial.listen();
 
  Serial.print("Your Position is : ");
 
  gsmSerial.print("position is : ");
 
  Serial.print("LATTITUDE=");
  Serial.print(*p, 6);
 
  gsmSerial.print("LATTITUDE=");
  gsmSerial.print(*p, 6);
  gsmSerial.print(",");  // The SMS text you want to send
 
  Serial.print("LONGITUDE=");
  Serial.print(*(p + 1), 6);
 
  gsmSerial.print("LONGITUDE=");
  gsmSerial.print(*(p + 1), 6);  // The SMS text you want to send
 
  delay(100);
 
  gsmSerial.println((char)26);

}



 
